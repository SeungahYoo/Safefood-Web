<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mvc.mapper.JJimMapper">

	<!-- myBatis가 이용하는 query문장이 들어 있는 파일 java Mapper에 의해 이용됨. java Mapper - 
		xml Mapper - myBatis java Mapper안에 있는 메소드 이름과 xml Mapper 안의 query id가 일치해야 
		함. -->

	<!-- 리절트 맵 정의. primary key 컬럼은 id 태그로 표시해줌 -->
	<!-- <resultMap id="JJimResult" type="JJim"> type=JJim로 만들면 일단 비어있는걸로 만들구 밑에 <result>에서 SetNum , setName, setAddress 
			해주는거임 그래서 항상 resultMap(뒷처리) 필수
		<result column="id" property="id" /> property = "num" 의 의미는 레코드 갯수 만큼 VO내부에서 list에 Cusotmer정보 하나의 객체를 계속 저장함
		<result column="code" property="code" />
		<result column="date" property="date" />
	</resultMap> -->

	<select id="selectAll" resultType="JJim"> <!--resultMap은 쿼리를 실행한 후에 데이터 값을(JDBC에서 WHILE문 돌리듣이) JJimResult객체가 해줄거다. -->
		select f.name name from safefood.food f join safefood.member_jjim m on f.code=m.code where m.id=#{id}
	</select>

	<delete id="delete" parameterType="String">
		delete from safefood.member_jjim where code = #{code}
	</delete>
	
	<select id="findbyName" resultType="String"> <!--resultMap은 쿼리를 실행한 후에 데이터 값을(JDBC에서 WHILE문 돌리듣이) JJimResult객체가 해줄거다. -->
		select code from safefood.food where name=#{name}
	</select>




</mapper>








